# Problem:
# Write a password generator in Python. Be creative with how you generate passwords - strong passwords have a mix of lowercase letters, uppercase letters,
# numbers, and symbols. The passwords should be random, generating a new password every time the user asks for a new password.
# Include your run-time code in a main method.
# Extra:
# Ask the user how strong they want their password to be. For weak passwords, pick a word or two from a lis

#Note Round function 1.5 to 2 and 2.5 to 2 therefore when odd number is given then different output than expectectation

import string
import random
required_password_type = input("Please tell us which type of password to be generated i.e strong or week ") #user input strong or week
# required_password_type = "strong"
# password_size = int(input("How much should be length of password") # enchancement
default_password_size = 8 # password length
# week = string.ascii_lowercase + string.ascii_uppercase # concanating lower and upper case but not used this variable
# strong = string.ascii_lowercase + string.ascii_uppercase + string.digits + string.punctuation #concanating but not used this variable
lower_ascii = ''.join(random.choice(string.ascii_lowercase) for i in range(round(default_password_size/4))) #this 4 variable intialized here so not to make a big line of code in strong statement
upper_ascii = ''.join(random.choice(string.ascii_uppercase) for i in range(round(default_password_size/4)))
numbers = ''.join(random.choice(string.digits) for i in range(round(default_password_size/4)))
special_char = ''.join(random.choice(string.punctuation) for i in range(default_password_size-((round(default_password_size/4))*3)))
def password_generator(password,default):
    if required_password_type.lower() == "strong": # If strong password is required
        strong = lower_ascii+upper_ascii+numbers+special_char #password will take 2 char from all
        print(''.join(random.sample(strong,default_password_size))) # to show in random order otherwiser will show capital 2 and lower 2 will easy to crack password type
    elif required_password_type.lower() == "week":  # if week password is required
        random_value = random.choice([1,2,3,4]) # to generate everytime different password
        if random_value == 1: # lower + upper case password
            print(''.join(random.sample(''.join(random.choice(string.ascii_lowercase) for i in range(round(default_password_size / 2)))+''.join(random.choice(string.ascii_uppercase) for i in range(default_password_size-((round(default_password_size/2))))),default_password_size)))
        elif random_value == 2: #upper + number password
            print(''.join(random.sample(''.join(random.choice(string.ascii_uppercase) for i in range(round(default_password_size / 2))) + ''.join(random.choice(string.digits) for i in range(default_password_size-((round(default_password_size/2))))),default_password_size)))
        elif random_value == 3: # numbers + special characters
            print(''.join(random.sample(''.join(random.choice(string.digits) for i in range(round(default_password_size / 2)))+''.join(random.choice(string.punctuation) for i in range(default_password_size-((round(default_password_size/2))))),default_password_size)))
        elif random_value == 4: # special+characters + lowercase
            print(''.join(random.sample(''.join(random.choice(string.punctuation) for i in range(round(default_password_size / 2)))+''.join(random.choice(string.ascii_lowercase) for i in range(default_password_size-((round(default_password_size/2))))),default_password_size)))
    else:
        print("Your input is incorrect, please type strong or week to generate password")

if __name__ == '__main__':
    password_generator(required_password_type,default_password_size)

